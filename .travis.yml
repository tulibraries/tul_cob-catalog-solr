---
services:
  - docker

before_install:
  - echo -e "machine github.com\n  login $CI_USER_TOKEN" > ~/.netrc
  - cd ..
  - git clone --single-branch --branch master https://github.com/tulibraries/ansible-playbook-solrcloud.git
  - mkdir -p ansible-playbook-solrcloud/data/tmp/collections
  - cp -r tul_cob-catalog-solr ansible-playbook-solrcloud/data/tmp/collections/

install:
  - cd ansible-playbook-solrcloud
  - make build
  - bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8090/solr)" != "302" ]]; do sleep 5; done'
  - make create-local-collections
  - make create-local-aliases
  - cd ..

script:
  - curl http://localhost:8081/solr/tul_cob-catalog/admin/ping | jq .status

after_success:
  - true

before_deploy:
  - cd tul_cob-catalog-solr

deploy:
  - provider: script
    script: bash .travis/deploy-stage.sh
    on:
      branch: master
  - provider: script
    script: bash .travis/deploy-prod.sh
    on:
      tags: true
      branch:
        - /^[0-9]$/

# deploy:
#   provider: releases
#   skip_cleanup: true
#   prerelease: false
#   name: $TRAVIS_TAG release
#   file:
#     - $TRAVIS_TAG.tar.gz
#     - $TRAVIS_TAG.zip
#   api_key:
#     secure: AGUiZgxfZVG5c6EvV+n6malKxO3BNDDRfJiHpW+G9zMGnZNTL4Vmmn3tM/rVZ9jvcYHE6nbTvS1GiFftKZ34i/PPgWFeMAUXeX4S8vMXDIpB9V2X9tfTnRxpdMGZtnPL/m2e7ThNXH5djY4W/bAIb/3EcezK5mTDiaLfq0A2DfhYLXoqEprv21Nz1Mq9cP5rpZAMgdv0MYKjovZF3+hyVVkz3hEdDMHgPD/tFszfF3k1T2LVNkvYcq9lEAeJ51BG1hp2vbokd2SBKamyq+S6VvKpN8ysijWVO7CRseXmEbocksDgOi2iBZ/4aalflm/bt/rg0vY75DEwtQ7+ErXkcGU/ojeyRkgWayLdifkcSUqMRsnrmQngGSPEABMV2FThuafdvywZ4WHoqPQls0a2yxJI+nZ38dzCQZ64dTgexGAyCs/goPmmhINloNlFgUI2B6FK42CKXg8xov/PlM/ev20P7Prjk3IuR5PIDWENU2CEXkFYj8A750AXoRVu+BrN37h1xUFA1O92xs2mvjScELxN/t9xGyFKRzLCoufM9sMU4NtZOF5M6sBfioyQvq70Suk96TaZTPTaP5ZuUlkIoDATpsmd4yDa3QiVvlKg+oxvWoG4zyTERAX2H7MtXUisFEEc09wV3ee5/XyCdiK5rZ/OdnHZpXziSE5xHdhXbK4=
#   on:
#     repo: tulibraries/tul_cob-catalog-solr
#     tags: true
#     branch:
#       - /^v.*$/

notifications:
  slack:
    rooms:
      - secure: "t2abp4n0V4MbZoWj3wnYq5HgB8eednKfGJryJsvYUkhlmXSu6kr+P1RtrAPxUpK1IeH4rjpVLIFfRgEaV9WlMP/8A4Vedc4SgFJTpZ1WjGW0BFk0jndbrHsJ5UogqHnjA1kq7PTg5JRg8K1MZiasNko/MEhGlIUGVp7BN9bNJVj/fP4KiMCF1NM23TB/a5G3eKu9PB2Xaz6nEoucbcwTJU2ns8qi1Ow1IFHqe4832nDnrztogbnH18423v727ce2J2+cuv9Xc+i07CNg8A5W8sWSrAEHytNprciOOvignbHlNMUb9iBZx0TV6Xu6Cy2dbUOpo95ItgTykiXgFDnJWOphQVMPPsrsUxM5eMjbh/da6A34WpStQdiTS0idQjfpOO3vz8vHAyOsIubl/cwvg9qkXgwRqOtU7HXFShqY7FFvPe8NP7ZeHhV2VL8vGpEZ1PzfidiFgux2sVcZPEXEX3L3lDAsCspzNJq8KH/aTshD6le0XloYGyPu2JxUBsr+HauLnI/a1Z2HTHRgK0SF/6NQP+IcIMurMx3RTjbAcpWOLHt4fAAL8XS/8RiwleG55gHNchKhpwb7tzmbHTuwXiDkI18nl1An70vHfUh2duZL+LbVcdHXaAiT+vbYZtLoNOuYaUd0dnl7EjeB4O7LtVDBO1BNrpuu+HsOI4A7NTg="
      - secure: "LvfhiKQd8OGrJ6TTIC/Gwkuj90WoZitApB4UPxJZZD7Vz63YhAl7T8gXKcMEymwEAkEO0SWOkghasEh06SJqcdjvnpYVDAEMZPepHqpFmOMGLQvjqKVhtZSP62mquusu1wP8dtNseng5Tj2uAIqf4QfZyWI/p5MZkZ8obbLlCupudx6MYCDko5RwQqJntA3uFkJcI/iuHtJ7yxi7zdJJwiWmNuKEwX5PLFJguqMyA/RU6HvsPlNdWwqMsaMLNCINxP8AP91XqyjRIncZ/2+n4wILE0NQKp4sS9bWHB/VP5mLfg5NIBF29XM+atW+njjPxgU1gGyp/ceLTIOvWmkH0jEUk6mNSidK+w13ikY3weZF+O58e7LzrO22DXyWpQ5KrU2vCT/w0Av/vOYteSZj+B4yDo4lz3j+JilDvvgIdzVWMdugu9MUGzlx8cpyC0Hit7oqDyFdJ/sl0dy9eI8IS9fDMOl9w3Xt6iyuI1QXIpUuUKaxkbK7ot6BPU1zxVOs6aSRBVXNoOo/hyYiUnmuO/MP216GWup8IJLVcShWive/vg+8uDkocho/mEgf6NAmp5raC+UA4M5liKJjvAx5f2ejfxD5NNL1itFutUtDSTTXzgxNOuFNotKN1/YavT7uox+4Dd7WdNkVN3gvcgu8h3HGg4T3h6r3LgYLDgNUeZ0="
